/*
继承与派生概述
1.继承与派生是同一过程从不同的角度来看
    保持已有类的特性而构造新类的过程称为继承。
    在已有类的基础上新增自己的特性而产生新类的过程称为派生。
2.被继承的已有类称为基类（或父类）
3.派生出的新类称为派生类（或子类）
4.直接参与派生出某类的基类称为直接基类
5.基类的基类甚至更高层的基类称为间接基类

派生的目的
当新的问题出现，原有程序无法解决（或不能完全解决时），需要对原有程序进行改造。

单继承时派生类的定义
1语法
class 派生类名：继承方式 基类名
{
    成员声明
}

例子:
class Derived:public Base{
    public:
        Derived();
        ~Derived();
}

多继承时派生类的定义
1.语法
class 派生类名：继承方式1 基类名1,继承方式2 基类名2,...
{
    成员声明；
}
注意：每一个“继承方式”，只用于限制对紧随其后之基类的基础。
例子:
class Derived:public Base1,private Base2{
    public:
        Derived();
        ~Derived();
}

派生类的构成
1.吸收基类成员
    1.默认情况下派生类包含了全部基类中除构造和析构函数之外的所有成员
    2.c++11规定可以用using语句基础基类构造函数
2.改造基类成员
    如果派生类声明了一个和某基类成员同名的新成员，
    派生的新成员就隐藏或覆盖了外层同名的成员
3.添加新的成员
    派生类增加新成员使派生类在功能上有所发展
*/