/*
多继承是构造函数的定义语法

1.派生类名::派生类名(参数名):
基类名1(基类1初始化参数表)，
基类名2(基类2初始化参数表)，
...
基类名n(基类n初始化参数表)，
本类成员初始化列表
{
    //其他初始化;
}

派生类与基类的构造函数
1.当基类有默认构造函数使
1.1派生类构造函数可以不向基类构造函数传递参数。
1.2构造派生类的对象时，基类的默认构造函数将被调用。

2.如需执行基类中带参数的构造函数
2.1派生类构造函数应为基类构造函数提供参数

多继承且有对象成员时派生的构造函数定义语法
1.派生类名::派生类名(形参表):
基类名1(参数)，基类名2(参数),...,基类名n(参数),
本类成员初始化列表
{
    //其他初始化;
}

构造函数的执行顺序
1.调用基类构造函数
顺序按照他们被继承时声明的顺序，从左至右
2.对初始化列表中的成员进行初始化
2.1顺序按照他们在类中定义的顺序
2.2对象成员初始化时自动调用其所属类的构造函数
    由初始化列表提供参数
3.执行派生类的构造函数体中的内容

*/


#include <iostream>
using namespace std;
int main(){
    return 0;
}