/*
多文件结构和预编译命令
C++程序的一般组织结构
1.一个工程可以划分为多个源文件，例如:
1.1类声明文件（.h文件）
1.2类实现文件 （.cpp文件）
1.3类的使用文件（main（）所在的.cpp文件）

利用工程来组合各个文件
例5_7

外部变量
1.除了在定义它的源文件中可以使用外，还能被其他文件使用。
2.文件作用域中定义的变量，默认情况下都是外部变量
3.在其他文件中如果需要使用，需要使用extern关键字声明。

外部函数
1.在所有类之外声明的函数（也就是非成员函数），都是具有文件作用域的。
2.这样的函数都可以在不同的编译单元中被调用
3.只要在调用之前进行
引用性声明（即声明函数原型）即可。

将变量和函数限制在编译单元内
1.在匿名命名空间中定义的变量和函数，都不会暴露给其他的编译单元。
//匿名命名空间
namspace {
    int n;
    void f(){
        n++;
    }
}


标准C++类库是一个极为灵活并可扩展的可重用软件模块的集合。
1.输入、输出类
2.容器类与抽象数据类型
3.存储管理类
4.算法
5.错误处理
6.运行环境支持


编译预处理命令
1.#include 包含指令
1.将一个源文件当前源文件中该点处
2.#include <文件名>
    按标准方式搜索，文件位于c++系统目录的include子目录西
3.#include "文件名"
    首先在当前目录中搜索，若没有，再按标准方式搜索

2.#define 宏定义指令
1.定义符号常量，很多情况下一杯const定义语句取代
2.定义带参数宏，一类内联函数取代

3.#undef（取消define指令定义的符号）
1.删除由#define定义的宏，使之不再起作用

4.条件编译指令 #if 和 #endif
#if 常量表达式
//当”常量表达式“ 非零时编译
程序正文
#endif
.......

5.条件编译指令 #else
#if 常量表达式
//当”常量表达式“ 非零时编译
程序正文1
#else
//当”常量表达式“ 零时编译
程序正文2
#endif
.......

6.多选择条件编译指令 #elif
#if 常量表达式1
//当”常量表达式“ 非零时编译
程序正文1
#elif 常量表达式2
//当”常量表达式2“ 非零时编译
程序正文2
#else
//其他情况下编译
程序正文3
#endif
.......


7.条件编译指令 
#ifndef 标识符
程序段1
#else
程序段2
#endif
如果标识符未被的定义过，则编译程序段1
否则编译程序段2

 */